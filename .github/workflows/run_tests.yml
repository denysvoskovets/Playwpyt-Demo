name: Run automated tests and publish Allure report

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: all_tests
        type: choice
        options:
          - all_tests
          - smoke_tests

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers
        run: python -m playwright install --with-deps

      - name: Run all tests
        if: ${{ github.event.inputs.deployment_target == 'all_tests' }}
        run: pytest --tracing=retain-on-failure --alluredir=allure-results

      - name: Run smoke tests
        if: ${{ github.event.inputs.deployment_target == 'smoke_tests' }}
        run: pytest -m smoke --alluredir=allure-results

      - name: Upload allure-results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results

  generate-and-publish-report:
    runs-on: ubuntu-latest
    needs: test
    name: Generate & Publish Allure Report

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download allure-results
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Install Allure CLI
        run: |
          npm install -g allure-commandline

      - name: Show contents of allure-results
        run: ls -la allure-results

      - name: Generate Allure Report
        run: |
          allure generate allure-results -o allure-report --clean

      - name: Create .nojekyll file
        run: touch allure-report/.nojekyll

      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages
          keep_files: false
          force_orphan: true

      - name: Show gh-pages branch contents after deploy
        run: |
          git clone --branch gh-pages https://github.com/${{ github.repository }} gh-pages-temp
          ls -la gh-pages-temp
          ls -la gh-pages-temp/allure-report || echo "No allure-report folder in gh-pages branch"
